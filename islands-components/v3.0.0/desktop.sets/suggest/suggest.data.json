{
  "name": "suggest",
  "elems": [
    {
      "name": "provider",
      "title": [
        {
          "level": "common.blocks",
          "tech": "title.txt",
          "content": "Провайдер данных для подсказки\n"
        }
      ]
    }
  ],
  "mods": [
    {
      "name": "complete",
      "vals": [
        {
          "name": "auto",
          "title": [
            {
              "level": "common.blocks",
              "tech": "title.txt",
              "content": "Автодополнение\n"
            }
          ]
        }
      ],
      "title": [
        {
          "level": "common.blocks",
          "tech": "title.txt",
          "content": "Дополнение\n"
        }
      ]
    },
    {
      "name": "fixed",
      "vals": [
        {
          "name": "yes",
          "title": [
            {
              "level": "common.blocks",
              "tech": "title.txt",
              "content": "На странице\n"
            }
          ]
        }
      ],
      "title": [
        {
          "level": "common.blocks",
          "tech": "title.txt",
          "content": "Фиксированный\n"
        }
      ]
    }
  ],
  "title": [
    {
      "level": "common.blocks",
      "tech": "title.txt",
      "content": "Поисковая подсказка\n"
    }
  ],
  "description": [
    {
      "level": "common.blocks",
      "tech": "desc.md",
      "content": "<h2 id=\"-\">Описание</h2>\n<p>Блок <code>suggest</code>– поисковая подсказка. Появляется после первых введенных букв при формулировке поискового запроса. Состоит из <a href=\"../suggest-item/suggest-item.html\">элементов поисковой подсказки (блок <code>suggest-item</code>)</a>. Можно воспользоваться одной из них, и дальше вопрос не набирать. Используется для экономии времени на формулировку запроса.</p>\n<p>Блок не имеет DOM-представления. При первой необходимости, то есть после ввода хотя бы одного символа или клика в поле ввода поискового запроса, создаётся блок <code>popup</code> (DOM-узлы) и вся работа с DOM идёт через него.</p>\n<p>Логирование: счётчики выбора подсказок саджеста в данном блоке отсутствуют.</p>\n<h3 id=\"-\">Объявление блока на странице</h3>\n<p>Блок создаётся и подключается следующим образом:</p>\n<pre><code class=\"lang-javascript\">BEM.create(&#39;suggest&#39;, {\n    owner: &lt;BEM.блок&gt;, // блок-владелец (всегда блок `header` – шапка)\n    input: &lt;блок input&gt;, // поле ввода для поискового запроса\n    url: &#39;http://suggest.yandex.ru/...&#39;, // адрес сервера, который присылает данные для саджеста\n    suggest: { // данные для сервера\n        srv: &#39;serp_ru&#39;,\n        wiz: &#39;TrWth&#39;,\n        lr: 213\n    },\n    needUpdateTop: true\n});</code></pre>\n<p><strong>Внимание!</strong></p>\n<ul>\n<li>Поисковые подсказки не работают без JavaScript! Для создания блока <code>suggest</code> необходим включённый JavaScript на клиенте.</li>\n<li>Блок всегда растянут к краям страницы слева и справа! В данный момент отключить это невозможно.</li>\n</ul>\n<!-- %%suggest.examples/10-simple/10-simple%% -->\n\n<h4 id=\"-\">Поля блока</h4>\n<h5 id=\"-\">Обязательные</h5>\n<ul>\n<li><code>{BEM-блок} owner</code> – блок-владелец. Саджесту необходимо знать блок-владелец для позиционирования окошка с подсказками под ним. (Во всех случаях это шапка – блок  <code>header</code>)</li>\n<li><code>{BEM-блок} input</code> – поле ввода для поискового запроса. Блок <code>suggest</code> отслеживает изменения в поле ввода и сам перестраивает список подсказок. Данные с подсказками забираются из ручки (запрос), указанной в параметре <code>url</code>.</li>\n<li><code>{String} url</code> – адрес сервера, который присылает данные для саджеста, в виде URL, например, <code>http://suggest.yandex.ru/suggest-ya.cgi?version=4</code>.</li>\n</ul>\n<h5 id=\"-\">Необязательные</h5>\n<ul>\n<li><code>{String} name</code> — название дата-провайдера.\n<a href=\"#about-provider\">Дата-провайдер</a> — это отдельный блок, который знает какие данные приходят с сервера, обрабатывает их и специальным образом передаёт саджесту в формате, который тот понимает. Пока существует только один дата-провайдер, называемый <code>provider</code>. По умолчанию значением <code>name</code> является <code>suggest__provider</code>.</li>\n<li><code>{Object} suggest</code> — при помощи  параметра <code>suggest</code> можно переопределить данные, которые необходимо отправлять на сервер (suggest.yandex.ru) при каждом запросе. Список возможных значений данных и их описание можно посмотреть на wiki-странице <a href=\"http://wiki.yandex-team.ru/IvanJanikov/SuggestFormat\">формата CGI-параметров</a>.</li>\n<li><code>{Object} mods</code> — <a href=\"#modifikatory\">модификаторы саджеста</a>, которые нужно  передать («пробросить») в блок <code>popup</code>, в котором строятся подсказки.</li>\n<li><code>{String} label</code> — указатель на блок <code>service-label</code>. Метка сервиса находится рядом с поисковой строкой. Пример можно посмотреть у <a href=\"http://beta.yandex.ru/images/search?text=&amp;stype=image\">Картинок</a>. Подсказки саджеста сдвигаются таким образом, чтобы они были выровнены относительно метки сервиса.</li>\n</ul>\n<!-- %%suggest.examples/15-service-label/15-service-label%% -->\n\n<p><a name=\"modifikatory\"></a></p>\n<h3 id=\"-\">Модификаторы</h3>\n<p>Блок <code>suggest</code> создаёт <code>popup</code> (DOM-узлы) и добавляет его на страницу, при этом добавляя класс <code>suggest</code> на блок <code>popup</code>. Если необходимо на блок <code>popup</code> установить некий модификатор блока <code>suggest</code>, то можно воспользоваться следующей конструкцией:</p>\n<pre><code class=\"lang-javascript\">BEM.create(&#39;suggest&#39;, {\n    ...\n    mods: {\n        fixed: &#39;yes&#39;\n    },\n    ...\n});</code></pre>\n<p>В таком случае на блоке <code>popup</code> появится микс с <code>suggest_fixed_yes</code>.</p>\n<p><em><strong>Внимание!</strong> На winPhone 7.5 в IE9 не работает свойство <code>position: fixed</code>.</em></p>\n<!-- %%suggest.examples/20-fixed/20-fixed%% -->\n\n<h4 id=\"-\">Автодополнение</h4>\n<p>Блок <code>suggest</code> уже умеет дополнять ввод пользователя, но чтобы включить эту возможность, необходимо в зависимостях указать модификатор  саджеста <code>complete</code> со значением <code>auto</code>.</p>\n<pre><code class=\"lang-javascript\">/* .deps.js */\n({\n    shouldDeps: [\n        {block: &#39;suggest&#39;, mods: {complete: &#39;auto&#39;}}\n    ]\n})</code></pre>\n<p>В этот момент подключатся файлы, необходимые для автодополнения.</p>\n<p>Отображается только автодополнение, которое присылает сервер в поле <code>continue</code>.</p>\n<p><strong>Внимание!</strong>  <em>Автодополнение нельзя включить <strong>поблочно</strong>! Дополнение включается сразу для всех блоков на странице.</em></p>\n<p><strong>Внимание!</strong> <em>Установка более одного блока <code>suggest</code> на страницу не тестировалось!</em></p>\n<!-- %%suggest.examples/30-complete/30-complete%% -->\n\n<p><a name=\"about-provider\"></a></p>\n<h3 id=\"-\">Провайдер</h3>\n<p>Данные о подсказках предоставляет так называемый <strong>провайдер</strong>. Провайдер представляет собой блок, унаследованный от <code>i-request_type_ajax</code> (простые AJAX-запросы) блока <a href=\"https://lego.yandex-team.ru/desktop/common/blocks/i-request\">i-request</a>.</p>\n<p>По умолчанию используется блок <code>suggest__provider</code>, исходный код которого лежит в элементе <code>provider</code>, блока <code>suggest</code>. Данный блок является эталонным примером реализации для создания своих провайдеров.</p>\n<h3 id=\"-\">Значения по умолчанию</h3>\n<p>Параметр <code>name</code> — название провайдера данных, равен по умолчанию <code>suggest__provider</code>.</p>\n<h3 id=\"-\">Особенности реализации</h3>\n<ul>\n<li>Блок не имеет DOM-представления. При первой необходимости создаётся блок <code>popup</code>, и вся работа с DOM идёт через него.</li>\n<li>Дополнение не работает в IE8 из-за деградации <code>input</code>’а.</li>\n<li>Для перехода по элементам поисковой подсказки можно использовать клавиши вверх/вниз. Для выбора подходящего запроса – <code>Enter</code>.</li>\n<li>Для скрытия — <code>Esc</code>. Стрелка <code>[ → ]</code> и <code>Tab</code> активируют дополнение.</li>\n</ul>\n"
    }
  ],
  "examples": [
    {
      "level": "common.blocks",
      "tech": "examples",
      "content": [
        {
          "url": "suggest.examples/10-simple/10-simple",
          "title": "Подсказка\n"
        }
      ]
    }
  ]
}